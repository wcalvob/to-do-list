{"version":3,"sources":["components/TaskForm.js","components/Task.js","components/ApiForm.js","components/Api.js","App.js","reportWebVitals.js","index.js"],"names":["TaskForm","props","useState","inputText","setInputText","validation","setValidation","className","onSubmit","e","preventDefault","trim","newTask","value","onChange","target","placeholder","required","Task","editMode","setEditMode","editText","setEditText","taskDone","setTaskDone","updateTask","id","task","onClick","selectTask","type","checked","ApiForm","setValue","fetchData","a","fetch","url","then","response","json","data","Api","App","listTask","setListTask","listApi","setListApi","filteredList","filter","index","selectApi","updateList","map","updateApi","fact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f0c5584.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst TaskForm = (props) => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [validation, setValidation] = useState(true);\r\n\r\n  const handleForm = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const submit = (e) => {\r\n    e.preventDefault();\r\n    if (inputText.trim() !== \"\") {\r\n      props.newTask(inputText);\r\n      setInputText(\"\");\r\n      setValidation(true);\r\n    } else {\r\n      setValidation(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"taskform\">\r\n      <h4>Ingresar tareas manualmente:</h4>\r\n      <form className=\"form\" onSubmit={submit}>\r\n        <textarea\r\n          className=\"form-control my-2\"\r\n          value={inputText}\r\n          onChange={handleForm}\r\n          placeholder=\"Ingrese la tarea\"\r\n          required\r\n        ></textarea>\r\n        <button className=\"btn btn-warning rounded-pill m-2\">Añadir</button>\r\n      </form>\r\n\r\n      {!validation && <div className=\"validation\">Debe añadir una tarea.</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n","import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Task = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editText, setEditText] = useState(\"\");\r\n  const [taskDone, setTaskDone] = useState(false);\r\n\r\n  const editTask = () => {\r\n    setEditMode(true);\r\n    setEditText(props.task);\r\n  };\r\n\r\n  const handleEdit = (e) => {\r\n    setEditText(e.target.value);\r\n  };\r\n\r\n  const handleDone = (e) => {\r\n    setTaskDone(e.target.checked);\r\n  };\r\n\r\n  const submitEdit = (e) => {\r\n    e.preventDefault();\r\n    props.updateTask(props.id, editText);\r\n    setEditText(\"\");\r\n    setEditMode(false);\r\n  };\r\n\r\n  const deleteTask = () => {\r\n    props.selectTask(props.id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode ? (\r\n        <div className={\"task \" + (taskDone ? \"completed\" : null)}>\r\n          <span>{props.task}</span>\r\n          <div className=\"options\">\r\n            <button\r\n              onClick={editTask}\r\n              className=\"btn btn-success py-0 rounded-pill\"\r\n            >\r\n              Editar\r\n            </button>\r\n            <button\r\n              onClick={deleteTask}\r\n              className=\"btn btn-danger ms-2 py-0 rounded-pill\"\r\n            >\r\n              Eliminar\r\n            </button>\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input ms-2\"\r\n              onClick={handleDone}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"task\">\r\n          <form className=\"\" onSubmit={submitEdit}>\r\n            <textarea\r\n              className=\"form-control\"\r\n              value={editText}\r\n              onChange={handleEdit}\r\n              placeholder=\"Ingrese la tarea\"\r\n            ></textarea>\r\n            <button className=\"btn btn-warning mt-2 rounded-pill\">\r\n              Guardar\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst ApiForm = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const url = \"https://catfact.ninja/facts\";\r\n\r\n  const handleValue = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const fetchData = async (e) => {\r\n    e.preventDefault();\r\n    setValue(\"\");\r\n    await fetch(url + \"?limit=\" + value)\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        props.data(json.data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"taskform\">\r\n      <h4>Ingresar tareas aleatorias:</h4>\r\n      <form className=\"form\" onSubmit={fetchData}>\r\n        <input\r\n          className=\"form-control my-2\"\r\n          type=\"number\"\r\n          value={value}\r\n          onChange={handleValue}\r\n          placeholder=\"Ingrese la cantidad\"\r\n          required\r\n        />\r\n        <button className=\"btn btn-warning rounded-pill m-2\">Añadir</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApiForm;\r\n","import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst Api = (props) => {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [editText, setEditText] = useState(\"\");\r\n  const [taskDone, setTaskDone] = useState(false);\r\n\r\n  const editTask = () => {\r\n    setEditMode(true);\r\n    setEditText(props.task);\r\n  };\r\n\r\n  const handleEdit = (e) => {\r\n    setEditText(e.target.value);\r\n  };\r\n\r\n  const handleDone = (e) => {\r\n    setTaskDone(e.target.checked);\r\n  };\r\n\r\n  const submitEdit = (e) => {\r\n    e.preventDefault();\r\n    props.updateTask(props.id, editText);\r\n    setEditText(\"\");\r\n    setEditMode(false);\r\n  };\r\n\r\n  const deleteTask = () => {\r\n    props.selectTask(props.id);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {!editMode ? (\r\n        <div className={\"task \" + (taskDone ? \"completed\" : null)}>\r\n          <span>{props.task}</span>\r\n          <div className=\"options\">\r\n            <button\r\n              onClick={editTask}\r\n              className=\"btn btn-success py-0 rounded-pill\"\r\n            >\r\n              Editar\r\n            </button>\r\n            <button\r\n              onClick={deleteTask}\r\n              className=\"btn btn-danger ms-2 py-0 rounded-pill\"\r\n            >\r\n              Eliminar\r\n            </button>\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input ms-2\"\r\n              onClick={handleDone}\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"task\">\r\n          <form className=\"\" onSubmit={submitEdit}>\r\n            <textarea\r\n              className=\"form-control\"\r\n              value={editText}\r\n              onChange={handleEdit}\r\n              placeholder=\"Ingrese la tarea\"\r\n            ></textarea>\r\n            <button className=\"btn btn-warning mt-2 rounded-pill\">\r\n              Guardar\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Api;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Task from \"./components/Task\";\nimport ApiForm from \"./components/ApiForm\";\nimport Api from \"./components/Api\";\n\nfunction App() {\n  const [listTask, setListTask] = useState([]);\n  const [listApi, setListApi] = useState([]);\n\n  const newTask = (task) => {\n    setListTask([task, ...listTask]);\n  };\n\n  const selectTask = (id) => {\n    const filteredList = listTask.filter((e, index) => index !== id);\n    setListTask(filteredList);\n  };\n\n  const selectApi = (id) => {\n    const filteredList = listApi.filter((e, index) => index !== id);\n    setListApi(filteredList);\n  };\n\n  const updateTask = (id, task) => {\n    const updateList = listTask.map((e, index) => {\n      if (index === id) {\n        e = task;\n      }\n      return e;\n    });\n    setListTask(updateList);\n  };\n\n  const updateApi = (id, task) => {\n    const updateList = listApi.map((e, index) => {\n      if (index === id) {\n        e.fact = task;\n      }\n      return e;\n    });\n    setListApi(updateList);\n  };\n\n  const data = (e) => {\n    setListApi(e, ...listApi);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Lista de Tareas</h1>\n      <TaskForm newTask={newTask} />\n      <ApiForm data={data} />\n      <div className=\"list-task\">\n        {listTask.map((e, index) => (\n          <Task\n            task={e}\n            selectTask={selectTask}\n            id={index}\n            updateTask={updateTask}\n            key={index}\n          />\n        ))}\n      </div>\n      <div className=\"list-task\">\n        {listApi.map((e, index) => (\n          <Api\n            task={e.fact}\n            selectTask={selectApi}\n            id={index}\n            updateTask={updateApi}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}